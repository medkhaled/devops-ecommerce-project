name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - '.gitignore'
      - 'docs/**'
      - '*.md'

env:
  ACR_NAME: devopsecomacr1234.azurecr.io
  KUBERNETES_NAMESPACE: default

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Azure Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.ACR_NAME }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Set up Kubeconfig
      uses: azure/k8s-set-context@v4
      with:
        kubeconfig: ${{ secrets.KUBE_CONFIG }}

    # ==============================
    # Frontend Service
    # ==============================
    - name: Build and push frontend image
      run: |
        docker build -t ${{ env.ACR_NAME }}/frontend:${{ github.run_id }} app/frontend
        docker tag ${{ env.ACR_NAME }}/frontend:${{ github.run_id }} ${{ env.ACR_NAME }}/frontend:latest
        docker push ${{ env.ACR_NAME }}/frontend:${{ github.run_id }}
        docker push ${{ env.ACR_NAME }}/frontend:latest

    - name: Deploy frontend to AKS
      run: |
        kubectl apply -f k8s/deployments/frontend.yaml -n ${{ env.KUBERNETES_NAMESPACE }}
        kubectl apply -f k8s/services/frontend-service.yaml -n ${{ env.KUBERNETES_NAMESPACE }}
        kubectl set image deployment/frontend frontend=${{ env.ACR_NAME }}/frontend:${{ github.run_id }} -n ${{ env.KUBERNETES_NAMESPACE }} || true
        kubectl rollout status deployment/frontend -n ${{ env.KUBERNETES_NAMESPACE }} --timeout=300s

    # ==============================
    # Users Service
    # ==============================
    - name: Build and push users-service image
      run: |
        docker build -t ${{ env.ACR_NAME }}/users:${{ github.run_id }} app/users-service
        docker tag ${{ env.ACR_NAME }}/users:${{ github.run_id }} ${{ env.ACR_NAME }}/users:latest
        docker push ${{ env.ACR_NAME }}/users:${{ github.run_id }}
        docker push ${{ env.ACR_NAME }}/users:latest

    - name: Deploy users-service to AKS
      run: |
        kubectl apply -f k8s/deployments/users.yaml -n ${{ env.KUBERNETES_NAMESPACE }}
        kubectl apply -f k8s/services/users-service.yaml -n ${{ env.KUBERNETES_NAMESPACE }}
        kubectl set image deployment/users-service users=${{ env.ACR_NAME }}/users:${{ github.run_id }} -n ${{ env.KUBERNETES_NAMESPACE }} || true
        kubectl rollout status deployment/users-service -n ${{ env.KUBERNETES_NAMESPACE }} --timeout=300s

    # ==============================
    # Products Service
    # ==============================
    - name: Build and push products-service image
      run: |
        docker build -t ${{ env.ACR_NAME }}/products:${{ github.run_id }} app/products-service
        docker tag ${{ env.ACR_NAME }}/products:${{ github.run_id }} ${{ env.ACR_NAME }}/products:latest
        docker push ${{ env.ACR_NAME }}/products:${{ github.run_id }}
        docker push ${{ env.ACR_NAME }}/products:latest

    - name: Deploy products-service to AKS
      run: |
        kubectl apply -f k8s/deployments/products.yaml -n ${{ env.KUBERNETES_NAMESPACE }}
        kubectl apply -f k8s/services/products-service.yaml -n ${{ env.KUBERNETES_NAMESPACE }}
        kubectl set image deployment/products-service products=${{ env.ACR_NAME }}/products:${{ github.run_id }} -n ${{ env.KUBERNETES_NAMESPACE }} || true
        kubectl rollout status deployment/products-service -n ${{ env.KUBERNETES_NAMESPACE }} --timeout=300s

    # ==============================
    # Cart Service
    # ==============================
    - name: Build and push cart-service image
      run: |
        docker build -t ${{ env.ACR_NAME }}/cart:${{ github.run_id }} app/cart-service
        docker tag ${{ env.ACR_NAME }}/cart:${{ github.run_id }} ${{ env.ACR_NAME }}/cart:latest
        docker push ${{ env.ACR_NAME }}/cart:${{ github.run_id }}
        docker push ${{ env.ACR_NAME }}/cart:latest

    - name: Deploy cart-service to AKS
      run: |
        kubectl apply -f k8s/deployments/cart.yaml -n ${{ env.KUBERNETES_NAMESPACE }}
        kubectl apply -f k8s/services/cart-service.yaml -n ${{ env.KUBERNETES_NAMESPACE }}
        kubectl set image deployment/cart-service cart=${{ env.ACR_NAME }}/cart:${{ github.run_id }} -n ${{ env.KUBERNETES_NAMESPACE }} || true
        kubectl rollout status deployment/cart-service -n ${{ env.KUBERNETES_NAMESPACE }} --timeout=300s

    - name: Cluster Health Check
      run: |
        echo "Checking pods in namespace ${{ env.KUBERNETES_NAMESPACE }}"
        kubectl get pods -o wide -n ${{ env.KUBERNETES_NAMESPACE }}
        echo "Checking services in namespace ${{ env.KUBERNETES_NAMESPACE }}"
        kubectl get svc -n ${{ env.KUBERNETES_NAMESPACE }}
        echo "All services deployed successfully!"
