---
- name: Deploy Prometheus and Grafana on AKS
  hosts: localhost
  connection: local
  vars:
    kubeconfig_path: "~/.kube/config"
    grafana_admin_user: "admin"
    grafana_admin_password: "admin123"
    grafana_namespace: "monitoring"
    prometheus_namespace: "monitoring"
    grafana_dashboards:
      - "https://grafana.com/api/dashboards/6417/revisions/1/download"   # K8s cluster dashboard
      - "https://grafana.com/api/dashboards/315/revisions/1/download"    # Node Exporter dashboard

  tasks:
    - name: Ensure monitoring namespace exists
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: monitoring

    - name: Add Helm repo prometheus-community
      community.kubernetes.helm_repository:
        name: prometheus-community
        repo_url: "https://prometheus-community.github.io/helm-charts"

    - name: Add Helm repo grafana
      community.kubernetes.helm_repository:
        name: grafana
        repo_url: "https://grafana.github.io/helm-charts"

    - name: Install Prometheus
      community.kubernetes.helm:
        name: prometheus
        chart_ref: prometheus-community/prometheus
        release_namespace: "{{ prometheus_namespace }}"
        kubeconfig: "{{ kubeconfig_path }}"

    - name: Install Grafana
      community.kubernetes.helm:
        name: grafana
        chart_ref: grafana/grafana
        release_namespace: "{{ grafana_namespace }}"
        kubeconfig: "{{ kubeconfig_path }}"
        values:
          adminUser: "{{ grafana_admin_user }}"
          adminPassword: "{{ grafana_admin_password }}"
          service:
            type: LoadBalancer

    - name: Wait for Grafana service external IP
      kubernetes.core.k8s_info:
        kubeconfig: "{{ kubeconfig_path }}"
        api_version: v1
        kind: Service
        namespace: "{{ grafana_namespace }}"
        name: grafana
      register: grafana_svc
      until: grafana_svc.resources[0].status.loadBalancer.ingress is defined
      retries: 15
      delay: 20

    - name: Set fact for Grafana external IP
      set_fact:
        grafana_url: "http://{{ grafana_svc.resources[0].status.loadBalancer.ingress[0].ip }}"

    - name: Import Grafana dashboards
      uri:
        url: "{{ grafana_url }}/api/dashboards/import"
        method: POST
        user: "{{ grafana_admin_user }}"
        password: "{{ grafana_admin_password }}"
        force_basic_auth: yes
        body: "{{ lookup('url', item) | from_json | to_json }}"
        body_format: json
        headers:
          Content-Type: "application/json"
      loop: "{{ grafana_dashboards }}"
      register: dashboard_import
      retries: 3
      delay: 10
